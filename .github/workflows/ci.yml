name: "CI/CD Pipeline"
on:
  push:
    branches-ignore:
      - main
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - 'monitoring/grafana-dashboard.json'
      - 'screenshots/**'
    tags-ignore:
      - '*'
  pull_request:
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - 'data/static/i18n/*.json'
      - 'frontend/src/assets/i18n/*.json'
env:
  ANGULAR_CLI_VERSION: 15
  CYCLONEDX_NPM_VERSION: '^1.12.0'
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@v4 #v4.0.0
      - name: "Use Node.js 18"
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 20
      - name: "Install CLI tools"
        run: npm install -g @angular/cli@$ANGULAR_CLI_VERSION
      - name: "Install application minimalistically"
        run: |
          npm install --ignore-scripts
          cd frontend
          npm install --ignore-scripts --legacy-peer-deps
      - name: "Lint source code"
        run: npm run lint
        continue-on-error: true
      - name: "Lint customization configs"
        run: >
          npm run lint:config -- -f ./config/7ms.yml &&
          npm run lint:config -- -f ./config/addo.yml &&
          npm run lint:config -- -f ./config/bodgeit.yml &&
          npm run lint:config -- -f ./config/ctf.yml &&
          npm run lint:config -- -f ./config/default.yml &&
          npm run lint:config -- -f ./config/fbctf.yml &&
          npm run lint:config -- -f ./config/juicebox.yml &&
          npm run lint:config -- -f ./config/mozilla.yml &&
          npm run lint:config -- -f ./config/oss.yml &&
          npm run lint:config -- -f ./config/quiet.yml &&
          npm run lint:config -- -f ./config/tutorial.yml &&
          npm run lint:config -- -f ./config/unsafe.yml
  coding-challenge-rsn:
    runs-on: windows-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@v4 #v4.0.0
      - name: "Use Node.js 18"
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 20
      - name: "Install CLI tools"
        run: npm install -g @angular/cli@$ANGULAR_CLI_VERSION
      - name: "Install application"
        run: npm install
      - name: "Check coding challenges for accidental code discrepancies"
        run: npm run rsn
  e2e:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        browser: [chrome] # FIXME Switch back to [chrome, firefox] after debugging extreme flakiness of Firefox on CI/CD
      fail-fast: false
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@v4 #v4.0.0
      - name: "Use Node.js 18"
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d #v3.8.1
        with:
          node-version: 20
      - name: "Install CLI tools"
        run: npm install -g @angular/cli
      - name: "Install application"
        run: npm install
      - name: "Execute end-to-end tests on Ubuntu"
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: cypress-io/github-action@59810ebfa5a5ac6fcfdcfdf036d1cd4d083a88f2 #v6.5.0
        with:
          install: false
          browser: ${{ matrix.browser }}
          start: npm start
          wait-on: http://localhost:3000
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  smoke-test:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@v4 #v4.0.0
      - name: "Use Node.js 18"
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d #v3.8.1
        with:
          node-version: 20
      - name: "Install CLI tools"
        run: |
          npm install -g @angular/cli@$ANGULAR_CLI_VERSION
          npm install -g @cyclonedx/cyclonedx-npm@$CYCLONEDX_NPM_VERSION
          npm install -g grunt-cli
      - name: "Set packaging options for Grunt"
        run: |
          echo "PCKG_OS_NAME=linux" >> $GITHUB_ENV
          echo "PCKG_NODE_VERSION=18" >> $GITHUB_ENV
          echo "PCKG_CPU_ARCH=x64" >> $GITHUB_ENV
      - name: "Package application"
        run: |
          npm install --production
          npm run package:ci
      - name: "Unpack application archive"
        run: |
          cd dist
          tar -zxf juice-shop-*.tgz
      - name: "Execute smoke test"
        run: |
          cd dist/juice-shop_*
          npm start &
          cd ../..
          chmod +x test/smoke/smoke-test.sh
          test/smoke/smoke-test.sh http://localhost:3000